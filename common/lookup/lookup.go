package lookup

//GetResponseHTTP Function
func GetResponseHTTP(rc string) string {

	return GetResponseMAP(rc)[0]
}

//GetResponseDesc Function
func GetResponseDesc(rc string) string {

	return GetResponseMAP(rc)[1]
}

//GetResponseMAP Function
func GetResponseMAP(rc string) []string {
	MapperrDesc := map[string][]string{
		"00":  {"200", "Success"},
		"01":  {"400", "Refer to card issuer"},
		"02":  {"400", "Refer to card issuer, special condition"},
		"03":  {"400", "Invalid merchant or service provider"},
		"04":  {"400", "Pickup"},
		"06":  {"400", "General error"},
		"09":  {"400", "Request in progress"},
		"12":  {"400", "Invalid transaction"},
		"13":  {"400", "Invalid amount"},
		"14":  {"400", "Invalid account number"},
		"15":  {"400", "No such issuer"},
		"16":  {"400", "Insufficient funds"},
		"19":  {"400", "Re-enter transaction"},
		"20":  {"400", "Invalid response"},
		"21":  {"400", "No action taken (unable to back out prior transaction)"},
		"22":  {"400", "Suspected Malfunction"},
		"25":  {"400", "Unable to locate record in file, or account number is missing from the inquiry"},
		"28":  {"400", "File is temporarily unavailable"},
		"30":  {"400", "Format error"},
		"31":  {"400", "Invalid sessionId"},
		"41":  {"400", "Merchant should retain card (card reported lost)"},
		"43":  {"400", "Merchant should retain card (card reported stolen)"},
		"51":  {"400", "Insufficient funds"},
		"52":  {"400", "No checking account"},
		"53":  {"400", "No savings account"},
		"54":  {"400", "Expired card"},
		"57":  {"400", "Transaction not permitted to cardholder"},
		"58":  {"400", "Transaction not allowed at terminal"},
		"59":  {"400", "Suspected fraud"},
		"61":  {"400", "Activity amount limit exceeded"},
		"62":  {"400", "Restricted card"},
		"63":  {"400", "Security violation"},
		"65":  {"400", "Activity count limit exceeded"},
		"68":  {"400", "Response received too late"},
		"78":  {"400", "Card Blocked"},
		"80":  {"400", "Card Date invalid"},
		"82":  {"400", "CVN_MISMATCH"},
		"91":  {"400", "Issuer unavailable or switch inoperative"},
		"92":  {"400", "Destination cannot be found for routing"},
		"93":  {"400", "Transaction cannot be completed, violation of law"},
		"94":  {"400", "Duplicate transmission"},
		"95":  {"400", "Reconcile error"},
		"96":  {"400", "System malfunction"},
		"101": {"400", "Invalid Redis Key"},
		"102": {"400", "Invalid User"},
		"103": {"400", "Invalid Public Key"},
		"104": {"400", "Invalid Partner ID"},
		"105": {"400", "Invalid User ID"},
		"106": {"400", "Application Not Allowed"},
		"107": {"400", "Public key from partner is empty"},
		"108": {"400", "Error query"},
		"109": {"400", "Error generate key"},
		"110": {"400", "Empty SessionID"},
		"111": {"400", "Empty PartnerID"},
		"112": {"400", "Empty TransactionID"},
		"113": {"400", "Empty Signature"},
		"114": {"400", "Empty AccountNo"},
		"115": {"400", "Empty CurrencyCode"},
		"116": {"400", "Empty DestAccno"},
		"117": {"400", "Empty amount"},
		"118": {"400", "Empty trans response"},
		"119": {"400", "Empty remark"},
		"120": {"400", "TransactionID invalid"},
		"121": {"400", "Empty OS ID"},
		"122": {"400", "Empty Major"},
		"123": {"400", "Empty Minor"},
		"124": {"400", "Empty timestamp"},
		"125": {"400", "Empty revision"},
		"126": {"400", "Empty build number"},
		"127": {"400", "Empty start date"},
		"128": {"400", "Empty end date"},
		"129": {"422", "Error request"},
		"XX":  {"500", "Unknown Error"},
		"P14": {"400", "Invalid Partner"},
		"P78": {"400", "Partner Blocked"},
		"S91": {"400", "Service error"},
	}
	val, err := MapperrDesc[rc]
	if !err {
		val = MapperrDesc["XX"]
	}

	return val
}

//GetBankInstName Function
func GetBankInstName(InstID string) string {
	MapperrDesc := map[string]string{
		"014": "Bank BCA",
		"008": "Bank Mandiri",
		"009": "Bank BNI",
		"427": "Bank BNI Syariah",
		"002": "Bank BRI",
		"451": "Bank Syariah Mandiri",
		"022": "Bank CIMB Niaga",
		"147": "Bank Muamalat",
		"213": "Bank Tabungan Pensiunan Nasional (BTPN)",
		"422": "Bank BRI Syariah",
		"200": "Bank Tabungan Negara (BTN)",
		"013": "Permata Bank",
		"011": "Bank Danamon",
		"016": "Bank BII Maybank",
		"426": "Bank Mega",
		"153": "Bank Sinarmas",
		"950": "Bank Commonwealth",
		"028": "Bank OCBC NISP",
		"441": "Bank Bukopin",
		"536": "Bank BCA Syariah",
		"026": "Bank Lippo",
		"031": "Citibank",
		"789": "Indosat Dompetku",
		"110": "Bank Jabar dan Banten (BJB)",
		"111": "Bank DKI",
		"112": "BPD DIY",
		"113": "Bank Jateng",
		"114": "Bank Jatim",
		"115": "BPD Jambi",
		"116": "BPD Aceh, BPD Aceh Syariah",
		"117": "Bank Sumut",
		"118": "Bank Nagari",
		"119": "Bank Riau",
		"120": "Bank Sumsel Babel",
		"121": "Bank Lampung",
		"122": "Bank Kalsel",
		"123": "Bank Kalimantan Barat",
		"124": "Bank Kalimantan Timur dan Utara",
		"125": "Bank Kalteng",
		"126": "Bank Sulsel dan Barat",
		"127": "Bank Sulut Gorontalo",
		"128": "Bank NTB, NTB Syariah",
		"129": "BPD Bali",
		"130": "Bank NTT",
		"131": "Bank Maluku Malut",
		"132": "Bank Papua",
		"133": "Bank Bengkulu",
		"134": "Bank Sulawesi Tengah",
		"135": "Bank Sultra",
		"003": "Bank Ekspor Indonesia",
		"019": "Bank Panin",
		"020": "Bank Arta Niaga Kencana",
		"030": "American Express Bank LTD",
		"032": "JP. Morgan Chase Bank, N.A",
		"033": "Bank of America, N.A",
		"034": "ING Indonesia Bank",
		"911": "Link Aja",
		"037": "Bank Artha Graha Internasional",
		"039": "Bank Credit Agricole Indosuez",
		"040": "The Bangkok Bank Comp. LTD",
		"041": "The Hongkong & Shanghai B.C. (Bank HSBC)",
		"042": "The Bank of Tokyo Mitsubishi UFJ LTD",
		"045": "Bank Sumitomo Mitsui Indonesia",
		"046": "Bank DBS Indonesia",
		"047": "Bank Resona Perdania",
		"048": "Bank Mizuho Indonesia",
		"050": "Standard Chartered Bank",
		"052": "Bank ABN Amro",
		"053": "Bank Keppel Tatlee Buana",
		"054": "Bank Capital Indonesia",
		"057": "Bank BNP Paribas Indonesia",
		"023": "Bank UOB Indonesia",
		"059": "Korea Exchange Bank Danamon",
		"425": "Bank BJB Syariah",
		"061": "Bank ANZ Indonesia",
		"067": "Deutsche Bank AG.",
		"068": "Bank Woori Indonesia",
		"069": "Bank OF China ",
		"076": "Bank Bumi Arta",
		"087": "Bank Ekonomi",
		"088": "Bank Antardaerah",
		"089": "Bank Haga",
		"093": "Bank IFI",
		"095": "Bank JTRUST",
		"097": "Bank Mayapada",
		"145": "Bank Nusantara Parahyangan",
		"146": "Bank of India Indonesia",
		"151": "Bank Mestika Dharma",
		"152": "Bank Metro Express (Bank Shinhan Indonesia)",
		"157": "Bank Maspion Indonesia",
		"159": "Bank Hagakita",
		"161": "Bank Ganesha",
		"162": "Bank Windu Kentjana",
		"164": "Halim Indonesia Bank (Bank ICBC Indonesia)",
		"166": "Bank Harmoni International",
		"167": "Bank QNB Kesawan (Bank QNB Indonesia)",
		"212": "Bank Himpunan Saudara 1906",
		"405": "Bank Swaguna",
		"459": "Bank Bisnis Internasional",
		"466": "Bank Sri Partha",
		"472": "Bank Jasa Jakarta",
		"484": "Bank Bintang Manunggal",
		"485": "Bank MNC / Bank Bumiputera",
		"490": "Bank Yudha Bhakti",
		"494": "Bank BRI Agro",
		"498": "Bank Indomonex (Bank SBI Indonesia)",
		"501": "Bank Royal Indonesia",
		"503": "Bank Alfindo (Bank National Nobu)",
		"506": "Bank Syariah Mega",
		"513": "Bank Ina Perdana",
		"517": "Bank Harfa",
		"520": "Prima Master Bank",
		"521": "Bank Persyarikatan Indonesia",
		"525": "Bank Akita",
		"526": "Liman International Bank",
		"531": "Anglomas Internasional Bank",
		"523": "Bank Dipo International (Bank Sahabat Sampoerna)",
		"535": "Bank Kesejahteraan Ekonomi",
		"542": "Bank Artos IND",
		"547": "Bank Purba Danarta",
		"548": "Bank Multi Arta Sentosa",
		"553": "Bank Mayora Indonesia",
		"555": "Bank Index Selindo",
		"559": "Centratama Nasional Bank",
		"566": "Bank Victoria International",
		"562": "Bank Fama Internasional",
		"564": "Bank Mandiri Taspen Pos",
		"567": "Bank Harda",
		"688": "BPR KS",
		"945": "Bank Agris",
		"946": "Bank Merincorp",
		"947": "Bank Maybank Indocorp",
		"948": "Bank OCBC â€“ Indonesia",
		"949": "Bank CTBC (China Trust) Indonesia",
	}
	return MapperrDesc[InstID]
}
