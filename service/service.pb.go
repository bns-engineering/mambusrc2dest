// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: service.proto

package service

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type InquiryMutationRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	AccountNo        string `protobuf:"bytes,4,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	StartDate        string `protobuf:"bytes,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate          string `protobuf:"bytes,6,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *InquiryMutationRq) Reset() {
	*x = InquiryMutationRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryMutationRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryMutationRq) ProtoMessage() {}

func (x *InquiryMutationRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryMutationRq.ProtoReflect.Descriptor instead.
func (*InquiryMutationRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *InquiryMutationRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *InquiryMutationRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *InquiryMutationRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *InquiryMutationRq) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *InquiryMutationRq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *InquiryMutationRq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type InquiryMutationRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode      string            `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage   string            `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ResponseTimestamp string            `protobuf:"bytes,3,opt,name=responseTimestamp,proto3" json:"responseTimestamp,omitempty"`
	AccountNo         string            `protobuf:"bytes,4,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	AccountName       string            `protobuf:"bytes,5,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountCurrency   string            `protobuf:"bytes,6,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	StartDate         string            `protobuf:"bytes,7,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate           string            `protobuf:"bytes,8,opt,name=endDate,proto3" json:"endDate,omitempty"`
	DataCount         string            `protobuf:"bytes,9,opt,name=dataCount,proto3" json:"dataCount,omitempty"`
	Data              []*DetailMutation `protobuf:"bytes,10,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *InquiryMutationRp) Reset() {
	*x = InquiryMutationRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryMutationRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryMutationRp) ProtoMessage() {}

func (x *InquiryMutationRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryMutationRp.ProtoReflect.Descriptor instead.
func (*InquiryMutationRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *InquiryMutationRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *InquiryMutationRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *InquiryMutationRp) GetResponseTimestamp() string {
	if x != nil {
		return x.ResponseTimestamp
	}
	return ""
}

func (x *InquiryMutationRp) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *InquiryMutationRp) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *InquiryMutationRp) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *InquiryMutationRp) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *InquiryMutationRp) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *InquiryMutationRp) GetDataCount() string {
	if x != nil {
		return x.DataCount
	}
	return ""
}

func (x *InquiryMutationRp) GetData() []*DetailMutation {
	if x != nil {
		return x.Data
	}
	return nil
}

type DetailMutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionDate   string `protobuf:"bytes,1,opt,name=transactionDate,proto3" json:"transactionDate,omitempty"`
	TransactionTime   string `protobuf:"bytes,2,opt,name=transactionTime,proto3" json:"transactionTime,omitempty"`
	DCFlag            string `protobuf:"bytes,3,opt,name=dCFlag,proto3" json:"dCFlag,omitempty"`
	TransactionAmount string `protobuf:"bytes,4,opt,name=transactionAmount,proto3" json:"transactionAmount,omitempty"`
	TransactionName   string `protobuf:"bytes,5,opt,name=transactionName,proto3" json:"transactionName,omitempty"`
	TransactionInfo   string `protobuf:"bytes,6,opt,name=transactionInfo,proto3" json:"transactionInfo,omitempty"`
}

func (x *DetailMutation) Reset() {
	*x = DetailMutation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailMutation) ProtoMessage() {}

func (x *DetailMutation) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailMutation.ProtoReflect.Descriptor instead.
func (*DetailMutation) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *DetailMutation) GetTransactionDate() string {
	if x != nil {
		return x.TransactionDate
	}
	return ""
}

func (x *DetailMutation) GetTransactionTime() string {
	if x != nil {
		return x.TransactionTime
	}
	return ""
}

func (x *DetailMutation) GetDCFlag() string {
	if x != nil {
		return x.DCFlag
	}
	return ""
}

func (x *DetailMutation) GetTransactionAmount() string {
	if x != nil {
		return x.TransactionAmount
	}
	return ""
}

func (x *DetailMutation) GetTransactionName() string {
	if x != nil {
		return x.TransactionName
	}
	return ""
}

func (x *DetailMutation) GetTransactionInfo() string {
	if x != nil {
		return x.TransactionInfo
	}
	return ""
}

type InquiryBalanceRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID   string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RqTimestamp string `protobuf:"bytes,2,opt,name=rqTimestamp,proto3" json:"rqTimestamp,omitempty"`
	Signature   string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	AccountNo   string `protobuf:"bytes,4,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
}

func (x *InquiryBalanceRq) Reset() {
	*x = InquiryBalanceRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryBalanceRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryBalanceRq) ProtoMessage() {}

func (x *InquiryBalanceRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryBalanceRq.ProtoReflect.Descriptor instead.
func (*InquiryBalanceRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *InquiryBalanceRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *InquiryBalanceRq) GetRqTimestamp() string {
	if x != nil {
		return x.RqTimestamp
	}
	return ""
}

func (x *InquiryBalanceRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *InquiryBalanceRq) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

type InquiryBalanceRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responsecode      string `protobuf:"bytes,1,opt,name=responsecode,proto3" json:"responsecode,omitempty"`
	Responsemessage   string `protobuf:"bytes,2,opt,name=responsemessage,proto3" json:"responsemessage,omitempty"`
	Responsetimestamp string `protobuf:"bytes,3,opt,name=responsetimestamp,proto3" json:"responsetimestamp,omitempty"`
	Accountno         string `protobuf:"bytes,4,opt,name=accountno,proto3" json:"accountno,omitempty"`
	Accountname       string `protobuf:"bytes,5,opt,name=accountname,proto3" json:"accountname,omitempty"`
	Accountcurrency   string `protobuf:"bytes,6,opt,name=accountcurrency,proto3" json:"accountcurrency,omitempty"`
	Accountbalance    string `protobuf:"bytes,7,opt,name=accountbalance,proto3" json:"accountbalance,omitempty"`
}

func (x *InquiryBalanceRp) Reset() {
	*x = InquiryBalanceRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryBalanceRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryBalanceRp) ProtoMessage() {}

func (x *InquiryBalanceRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryBalanceRp.ProtoReflect.Descriptor instead.
func (*InquiryBalanceRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *InquiryBalanceRp) GetResponsecode() string {
	if x != nil {
		return x.Responsecode
	}
	return ""
}

func (x *InquiryBalanceRp) GetResponsemessage() string {
	if x != nil {
		return x.Responsemessage
	}
	return ""
}

func (x *InquiryBalanceRp) GetResponsetimestamp() string {
	if x != nil {
		return x.Responsetimestamp
	}
	return ""
}

func (x *InquiryBalanceRp) GetAccountno() string {
	if x != nil {
		return x.Accountno
	}
	return ""
}

func (x *InquiryBalanceRp) GetAccountname() string {
	if x != nil {
		return x.Accountname
	}
	return ""
}

func (x *InquiryBalanceRp) GetAccountcurrency() string {
	if x != nil {
		return x.Accountcurrency
	}
	return ""
}

func (x *InquiryBalanceRp) GetAccountbalance() string {
	if x != nil {
		return x.Accountbalance
	}
	return ""
}

type TrfOnUsRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	TransactionID    string `protobuf:"bytes,4,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	AccountNo        string `protobuf:"bytes,5,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	CurrencyCode     string `protobuf:"bytes,6,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	DestAccountNo    string `protobuf:"bytes,7,opt,name=destAccountNo,proto3" json:"destAccountNo,omitempty"`
	Amount           string `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Remark           string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *TrfOnUsRq) Reset() {
	*x = TrfOnUsRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrfOnUsRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrfOnUsRq) ProtoMessage() {}

func (x *TrfOnUsRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrfOnUsRq.ProtoReflect.Descriptor instead.
func (*TrfOnUsRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *TrfOnUsRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *TrfOnUsRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *TrfOnUsRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *TrfOnUsRq) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *TrfOnUsRq) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *TrfOnUsRq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *TrfOnUsRq) GetDestAccountNo() string {
	if x != nil {
		return x.DestAccountNo
	}
	return ""
}

func (x *TrfOnUsRq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TrfOnUsRq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type TrfOnUsRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode      string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage   string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ResponseTimestamp string `protobuf:"bytes,3,opt,name=responseTimestamp,proto3" json:"responseTimestamp,omitempty"`
	RetReferenceID    string `protobuf:"bytes,4,opt,name=retReferenceID,proto3" json:"retReferenceID,omitempty"`
}

func (x *TrfOnUsRp) Reset() {
	*x = TrfOnUsRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrfOnUsRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrfOnUsRp) ProtoMessage() {}

func (x *TrfOnUsRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrfOnUsRp.ProtoReflect.Descriptor instead.
func (*TrfOnUsRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *TrfOnUsRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *TrfOnUsRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *TrfOnUsRp) GetResponseTimestamp() string {
	if x != nil {
		return x.ResponseTimestamp
	}
	return ""
}

func (x *TrfOnUsRp) GetRetReferenceID() string {
	if x != nil {
		return x.RetReferenceID
	}
	return ""
}

type TrfOffUsRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	TransactionID    string `protobuf:"bytes,4,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	ReferenceID      string `protobuf:"bytes,5,opt,name=referenceID,proto3" json:"referenceID,omitempty"`
	AccountNo        string `protobuf:"bytes,6,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	CurrencyCode     string `protobuf:"bytes,7,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	DestInstutionID  string `protobuf:"bytes,8,opt,name=destInstutionID,proto3" json:"destInstutionID,omitempty"`
	DestAccountNo    string `protobuf:"bytes,9,opt,name=destAccountNo,proto3" json:"destAccountNo,omitempty"`
	Amount           string `protobuf:"bytes,10,opt,name=amount,proto3" json:"amount,omitempty"`
	Remark           string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *TrfOffUsRq) Reset() {
	*x = TrfOffUsRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrfOffUsRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrfOffUsRq) ProtoMessage() {}

func (x *TrfOffUsRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrfOffUsRq.ProtoReflect.Descriptor instead.
func (*TrfOffUsRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (x *TrfOffUsRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *TrfOffUsRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *TrfOffUsRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *TrfOffUsRq) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *TrfOffUsRq) GetReferenceID() string {
	if x != nil {
		return x.ReferenceID
	}
	return ""
}

func (x *TrfOffUsRq) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *TrfOffUsRq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *TrfOffUsRq) GetDestInstutionID() string {
	if x != nil {
		return x.DestInstutionID
	}
	return ""
}

func (x *TrfOffUsRq) GetDestAccountNo() string {
	if x != nil {
		return x.DestAccountNo
	}
	return ""
}

func (x *TrfOffUsRq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TrfOffUsRq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type TrfOffUsRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responsecode      string `protobuf:"bytes,1,opt,name=responsecode,proto3" json:"responsecode,omitempty"`
	Responsemessage   string `protobuf:"bytes,2,opt,name=responsemessage,proto3" json:"responsemessage,omitempty"`
	Responsetimestamp string `protobuf:"bytes,3,opt,name=responsetimestamp,proto3" json:"responsetimestamp,omitempty"`
	RetReferenceID    string `protobuf:"bytes,4,opt,name=retReferenceID,proto3" json:"retReferenceID,omitempty"`
}

func (x *TrfOffUsRp) Reset() {
	*x = TrfOffUsRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrfOffUsRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrfOffUsRp) ProtoMessage() {}

func (x *TrfOffUsRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrfOffUsRp.ProtoReflect.Descriptor instead.
func (*TrfOffUsRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9}
}

func (x *TrfOffUsRp) GetResponsecode() string {
	if x != nil {
		return x.Responsecode
	}
	return ""
}

func (x *TrfOffUsRp) GetResponsemessage() string {
	if x != nil {
		return x.Responsemessage
	}
	return ""
}

func (x *TrfOffUsRp) GetResponsetimestamp() string {
	if x != nil {
		return x.Responsetimestamp
	}
	return ""
}

func (x *TrfOffUsRp) GetRetReferenceID() string {
	if x != nil {
		return x.RetReferenceID
	}
	return ""
}

type InqTrfOffUsRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode      string `protobuf:"bytes,1,opt,name=ResponseCode,proto3" json:"ResponseCode,omitempty"`
	ResponseMessage   string `protobuf:"bytes,2,opt,name=ResponseMessage,proto3" json:"ResponseMessage,omitempty"`
	ResponseTimestamp string `protobuf:"bytes,3,opt,name=ResponseTimestamp,proto3" json:"ResponseTimestamp,omitempty"`
	DestInstutionID   string `protobuf:"bytes,4,opt,name=DestInstutionID,proto3" json:"DestInstutionID,omitempty"`
	DestInstutionName string `protobuf:"bytes,5,opt,name=DestInstutionName,proto3" json:"DestInstutionName,omitempty"`
	DestAccountNo     string `protobuf:"bytes,6,opt,name=DestAccountNo,proto3" json:"DestAccountNo,omitempty"`
	DestAccountName   string `protobuf:"bytes,7,opt,name=DestAccountName,proto3" json:"DestAccountName,omitempty"`
	DestAccountCurr   string `protobuf:"bytes,8,opt,name=DestAccountCurr,proto3" json:"DestAccountCurr,omitempty"`
	DestAccountType   string `protobuf:"bytes,9,opt,name=DestAccountType,proto3" json:"DestAccountType,omitempty"`
}

func (x *InqTrfOffUsRp) Reset() {
	*x = InqTrfOffUsRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InqTrfOffUsRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InqTrfOffUsRp) ProtoMessage() {}

func (x *InqTrfOffUsRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InqTrfOffUsRp.ProtoReflect.Descriptor instead.
func (*InqTrfOffUsRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{10}
}

func (x *InqTrfOffUsRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *InqTrfOffUsRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *InqTrfOffUsRp) GetResponseTimestamp() string {
	if x != nil {
		return x.ResponseTimestamp
	}
	return ""
}

func (x *InqTrfOffUsRp) GetDestInstutionID() string {
	if x != nil {
		return x.DestInstutionID
	}
	return ""
}

func (x *InqTrfOffUsRp) GetDestInstutionName() string {
	if x != nil {
		return x.DestInstutionName
	}
	return ""
}

func (x *InqTrfOffUsRp) GetDestAccountNo() string {
	if x != nil {
		return x.DestAccountNo
	}
	return ""
}

func (x *InqTrfOffUsRp) GetDestAccountName() string {
	if x != nil {
		return x.DestAccountName
	}
	return ""
}

func (x *InqTrfOffUsRp) GetDestAccountCurr() string {
	if x != nil {
		return x.DestAccountCurr
	}
	return ""
}

func (x *InqTrfOffUsRp) GetDestAccountType() string {
	if x != nil {
		return x.DestAccountType
	}
	return ""
}

type InqTrfOffUsRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=PartnerID,proto3" json:"PartnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=RequestTimestamp,proto3" json:"RequestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
	DestInstutionID  string `protobuf:"bytes,4,opt,name=DestInstutionID,proto3" json:"DestInstutionID,omitempty"`
	DestAccountNo    string `protobuf:"bytes,5,opt,name=DestAccountNo,proto3" json:"DestAccountNo,omitempty"`
}

func (x *InqTrfOffUsRq) Reset() {
	*x = InqTrfOffUsRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InqTrfOffUsRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InqTrfOffUsRq) ProtoMessage() {}

func (x *InqTrfOffUsRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InqTrfOffUsRq.ProtoReflect.Descriptor instead.
func (*InqTrfOffUsRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{11}
}

func (x *InqTrfOffUsRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *InqTrfOffUsRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *InqTrfOffUsRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *InqTrfOffUsRq) GetDestInstutionID() string {
	if x != nil {
		return x.DestInstutionID
	}
	return ""
}

func (x *InqTrfOffUsRq) GetDestAccountNo() string {
	if x != nil {
		return x.DestAccountNo
	}
	return ""
}

type InqTrfOnUsRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode      string `protobuf:"bytes,1,opt,name=ResponseCode,proto3" json:"ResponseCode,omitempty"`
	ResponseMessage   string `protobuf:"bytes,2,opt,name=ResponseMessage,proto3" json:"ResponseMessage,omitempty"`
	ResponseTimestamp string `protobuf:"bytes,3,opt,name=ResponseTimestamp,proto3" json:"ResponseTimestamp,omitempty"`
	DestAccountNo     string `protobuf:"bytes,4,opt,name=DestAccountNo,proto3" json:"DestAccountNo,omitempty"`
	DestAccountName   string `protobuf:"bytes,5,opt,name=DestAccountName,proto3" json:"DestAccountName,omitempty"`
	DestAccountCurr   string `protobuf:"bytes,6,opt,name=DestAccountCurr,proto3" json:"DestAccountCurr,omitempty"`
	DestAccountType   string `protobuf:"bytes,7,opt,name=DestAccountType,proto3" json:"DestAccountType,omitempty"`
}

func (x *InqTrfOnUsRp) Reset() {
	*x = InqTrfOnUsRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InqTrfOnUsRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InqTrfOnUsRp) ProtoMessage() {}

func (x *InqTrfOnUsRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InqTrfOnUsRp.ProtoReflect.Descriptor instead.
func (*InqTrfOnUsRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{12}
}

func (x *InqTrfOnUsRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *InqTrfOnUsRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *InqTrfOnUsRp) GetResponseTimestamp() string {
	if x != nil {
		return x.ResponseTimestamp
	}
	return ""
}

func (x *InqTrfOnUsRp) GetDestAccountNo() string {
	if x != nil {
		return x.DestAccountNo
	}
	return ""
}

func (x *InqTrfOnUsRp) GetDestAccountName() string {
	if x != nil {
		return x.DestAccountName
	}
	return ""
}

func (x *InqTrfOnUsRp) GetDestAccountCurr() string {
	if x != nil {
		return x.DestAccountCurr
	}
	return ""
}

func (x *InqTrfOnUsRp) GetDestAccountType() string {
	if x != nil {
		return x.DestAccountType
	}
	return ""
}

type InqTrfOnUsRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=PartnerID,proto3" json:"PartnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=RequestTimestamp,proto3" json:"RequestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
	DestAccountNo    string `protobuf:"bytes,4,opt,name=DestAccountNo,proto3" json:"DestAccountNo,omitempty"`
}

func (x *InqTrfOnUsRq) Reset() {
	*x = InqTrfOnUsRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InqTrfOnUsRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InqTrfOnUsRq) ProtoMessage() {}

func (x *InqTrfOnUsRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InqTrfOnUsRq.ProtoReflect.Descriptor instead.
func (*InqTrfOnUsRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{13}
}

func (x *InqTrfOnUsRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *InqTrfOnUsRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *InqTrfOnUsRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *InqTrfOnUsRq) GetDestAccountNo() string {
	if x != nil {
		return x.DestAccountNo
	}
	return ""
}

type GenPartnerKeyRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	UserID           string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	PublicKey        string `protobuf:"bytes,5,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *GenPartnerKeyRq) Reset() {
	*x = GenPartnerKeyRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenPartnerKeyRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenPartnerKeyRq) ProtoMessage() {}

func (x *GenPartnerKeyRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenPartnerKeyRq.ProtoReflect.Descriptor instead.
func (*GenPartnerKeyRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{14}
}

func (x *GenPartnerKeyRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *GenPartnerKeyRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *GenPartnerKeyRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GenPartnerKeyRq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GenPartnerKeyRq) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type GenPartnerKeyRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	PublicKey       string `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *GenPartnerKeyRp) Reset() {
	*x = GenPartnerKeyRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenPartnerKeyRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenPartnerKeyRp) ProtoMessage() {}

func (x *GenPartnerKeyRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenPartnerKeyRp.ProtoReflect.Descriptor instead.
func (*GenPartnerKeyRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{15}
}

func (x *GenPartnerKeyRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *GenPartnerKeyRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *GenPartnerKeyRp) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type VerifySessionIdRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	SessionID        string `protobuf:"bytes,4,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	UserID           string `protobuf:"bytes,5,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *VerifySessionIdRq) Reset() {
	*x = VerifySessionIdRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySessionIdRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySessionIdRq) ProtoMessage() {}

func (x *VerifySessionIdRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySessionIdRq.ProtoReflect.Descriptor instead.
func (*VerifySessionIdRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{16}
}

func (x *VerifySessionIdRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *VerifySessionIdRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *VerifySessionIdRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VerifySessionIdRq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *VerifySessionIdRq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type VerifySessionIdRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
}

func (x *VerifySessionIdRp) Reset() {
	*x = VerifySessionIdRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySessionIdRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySessionIdRp) ProtoMessage() {}

func (x *VerifySessionIdRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySessionIdRp.ProtoReflect.Descriptor instead.
func (*VerifySessionIdRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{17}
}

func (x *VerifySessionIdRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *VerifySessionIdRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

type DecryptRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	EncryptValue     string `protobuf:"bytes,4,opt,name=encryptValue,proto3" json:"encryptValue,omitempty"`
	UserID           string `protobuf:"bytes,5,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *DecryptRq) Reset() {
	*x = DecryptRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRq) ProtoMessage() {}

func (x *DecryptRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRq.ProtoReflect.Descriptor instead.
func (*DecryptRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{18}
}

func (x *DecryptRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *DecryptRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *DecryptRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DecryptRq) GetEncryptValue() string {
	if x != nil {
		return x.EncryptValue
	}
	return ""
}

func (x *DecryptRq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type DecryptRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	DecryptValue    string `protobuf:"bytes,3,opt,name=decryptValue,proto3" json:"decryptValue,omitempty"`
}

func (x *DecryptRp) Reset() {
	*x = DecryptRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRp) ProtoMessage() {}

func (x *DecryptRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRp.ProtoReflect.Descriptor instead.
func (*DecryptRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{19}
}

func (x *DecryptRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *DecryptRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *DecryptRp) GetDecryptValue() string {
	if x != nil {
		return x.DecryptValue
	}
	return ""
}

type EncryptRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	SecretMessage    string `protobuf:"bytes,4,opt,name=secretMessage,proto3" json:"secretMessage,omitempty"`
	UserID           string `protobuf:"bytes,5,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *EncryptRq) Reset() {
	*x = EncryptRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRq) ProtoMessage() {}

func (x *EncryptRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRq.ProtoReflect.Descriptor instead.
func (*EncryptRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{20}
}

func (x *EncryptRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *EncryptRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *EncryptRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *EncryptRq) GetSecretMessage() string {
	if x != nil {
		return x.SecretMessage
	}
	return ""
}

func (x *EncryptRq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type EncryptRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	EncryptValue    string `protobuf:"bytes,3,opt,name=encryptValue,proto3" json:"encryptValue,omitempty"`
}

func (x *EncryptRp) Reset() {
	*x = EncryptRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRp) ProtoMessage() {}

func (x *EncryptRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRp.ProtoReflect.Descriptor instead.
func (*EncryptRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{21}
}

func (x *EncryptRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *EncryptRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *EncryptRp) GetEncryptValue() string {
	if x != nil {
		return x.EncryptValue
	}
	return ""
}

type LoginRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	EncryptValue     string `protobuf:"bytes,4,opt,name=encryptValue,proto3" json:"encryptValue,omitempty"`
	UserID           string `protobuf:"bytes,5,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *LoginRq) Reset() {
	*x = LoginRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRq) ProtoMessage() {}

func (x *LoginRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRq.ProtoReflect.Descriptor instead.
func (*LoginRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{22}
}

func (x *LoginRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *LoginRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *LoginRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *LoginRq) GetEncryptValue() string {
	if x != nil {
		return x.EncryptValue
	}
	return ""
}

func (x *LoginRq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type LoginRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	SessionID       string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *LoginRp) Reset() {
	*x = LoginRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRp) ProtoMessage() {}

func (x *LoginRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRp.ProtoReflect.Descriptor instead.
func (*LoginRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{23}
}

func (x *LoginRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *LoginRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *LoginRp) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GenPartnerOnboardKeyRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	PublicKey        string `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *GenPartnerOnboardKeyRq) Reset() {
	*x = GenPartnerOnboardKeyRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenPartnerOnboardKeyRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenPartnerOnboardKeyRq) ProtoMessage() {}

func (x *GenPartnerOnboardKeyRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenPartnerOnboardKeyRq.ProtoReflect.Descriptor instead.
func (*GenPartnerOnboardKeyRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{24}
}

func (x *GenPartnerOnboardKeyRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *GenPartnerOnboardKeyRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *GenPartnerOnboardKeyRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GenPartnerOnboardKeyRq) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type GenPartnerOnboardKeyRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	PublicKey       string `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *GenPartnerOnboardKeyRp) Reset() {
	*x = GenPartnerOnboardKeyRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenPartnerOnboardKeyRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenPartnerOnboardKeyRp) ProtoMessage() {}

func (x *GenPartnerOnboardKeyRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenPartnerOnboardKeyRp.ProtoReflect.Descriptor instead.
func (*GenPartnerOnboardKeyRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{25}
}

func (x *GenPartnerOnboardKeyRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *GenPartnerOnboardKeyRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *GenPartnerOnboardKeyRp) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type UserInfoRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	UserID           string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserInfoRq) Reset() {
	*x = UserInfoRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRq) ProtoMessage() {}

func (x *UserInfoRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRq.ProtoReflect.Descriptor instead.
func (*UserInfoRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{26}
}

func (x *UserInfoRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *UserInfoRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *UserInfoRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserInfoRq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserInfoRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode     string  `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage  string  `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	CifNo            string  `protobuf:"bytes,3,opt,name=cifNo,proto3" json:"cifNo,omitempty"`
	FullName         string  `protobuf:"bytes,4,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Alias            string  `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	LastLogin        string  `protobuf:"bytes,6,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	DefaultCardNo    string  `protobuf:"bytes,7,opt,name=defaultCardNo,proto3" json:"defaultCardNo,omitempty"`
	DefaultAccountNo string  `protobuf:"bytes,8,opt,name=defaultAccountNo,proto3" json:"defaultAccountNo,omitempty"`
	Cards            []*Card `protobuf:"bytes,9,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *UserInfoRp) Reset() {
	*x = UserInfoRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRp) ProtoMessage() {}

func (x *UserInfoRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRp.ProtoReflect.Descriptor instead.
func (*UserInfoRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{27}
}

func (x *UserInfoRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *UserInfoRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *UserInfoRp) GetCifNo() string {
	if x != nil {
		return x.CifNo
	}
	return ""
}

func (x *UserInfoRp) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UserInfoRp) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UserInfoRp) GetLastLogin() string {
	if x != nil {
		return x.LastLogin
	}
	return ""
}

func (x *UserInfoRp) GetDefaultCardNo() string {
	if x != nil {
		return x.DefaultCardNo
	}
	return ""
}

func (x *UserInfoRp) GetDefaultAccountNo() string {
	if x != nil {
		return x.DefaultAccountNo
	}
	return ""
}

func (x *UserInfoRp) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardNo   string     `protobuf:"bytes,1,opt,name=cardNo,proto3" json:"cardNo,omitempty"`
	CardSts  string     `protobuf:"bytes,2,opt,name=cardSts,proto3" json:"cardSts,omitempty"`
	Accounts []*Account `protobuf:"bytes,3,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{28}
}

func (x *Card) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *Card) GetCardSts() string {
	if x != nil {
		return x.CardSts
	}
	return ""
}

func (x *Card) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNo  string `protobuf:"bytes,1,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	AccountSts string `protobuf:"bytes,2,opt,name=accountSts,proto3" json:"accountSts,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{29}
}

func (x *Account) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *Account) GetAccountSts() string {
	if x != nil {
		return x.AccountSts
	}
	return ""
}

type UserDataRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	UserID           string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserDataRq) Reset() {
	*x = UserDataRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataRq) ProtoMessage() {}

func (x *UserDataRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataRq.ProtoReflect.Descriptor instead.
func (*UserDataRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{30}
}

func (x *UserDataRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *UserDataRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *UserDataRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserDataRq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserDataRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	CifNo           string `protobuf:"bytes,3,opt,name=cifNo,proto3" json:"cifNo,omitempty"`
	EktpID          string `protobuf:"bytes,4,opt,name=ektpID,proto3" json:"ektpID,omitempty"`
	FullName        string `protobuf:"bytes,5,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Alias           string `protobuf:"bytes,6,opt,name=alias,proto3" json:"alias,omitempty"`
	MotherName      string `protobuf:"bytes,7,opt,name=motherName,proto3" json:"motherName,omitempty"`
	BirthDate       string `protobuf:"bytes,8,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	Gender          string `protobuf:"bytes,9,opt,name=gender,proto3" json:"gender,omitempty"`
	Address         string `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	Phone           string `protobuf:"bytes,11,opt,name=phone,proto3" json:"phone,omitempty"`
	MobileNo        string `protobuf:"bytes,12,opt,name=mobileNo,proto3" json:"mobileNo,omitempty"`
	Email           string `protobuf:"bytes,13,opt,name=email,proto3" json:"email,omitempty"`
	Status          string `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserDataRp) Reset() {
	*x = UserDataRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataRp) ProtoMessage() {}

func (x *UserDataRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataRp.ProtoReflect.Descriptor instead.
func (*UserDataRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{31}
}

func (x *UserDataRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *UserDataRp) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *UserDataRp) GetCifNo() string {
	if x != nil {
		return x.CifNo
	}
	return ""
}

func (x *UserDataRp) GetEktpID() string {
	if x != nil {
		return x.EktpID
	}
	return ""
}

func (x *UserDataRp) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UserDataRp) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *UserDataRp) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *UserDataRp) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *UserDataRp) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserDataRp) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserDataRp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserDataRp) GetMobileNo() string {
	if x != nil {
		return x.MobileNo
	}
	return ""
}

func (x *UserDataRp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserDataRp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ProvinceRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ProvinceRq) Reset() {
	*x = ProvinceRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvinceRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvinceRq) ProtoMessage() {}

func (x *ProvinceRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvinceRq.ProtoReflect.Descriptor instead.
func (*ProvinceRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{32}
}

func (x *ProvinceRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *ProvinceRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *ProvinceRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type ProvinceRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode string          `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	Province     []*ProvinceType `protobuf:"bytes,2,rep,name=province,proto3" json:"province,omitempty"`
}

func (x *ProvinceRp) Reset() {
	*x = ProvinceRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvinceRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvinceRp) ProtoMessage() {}

func (x *ProvinceRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvinceRp.ProtoReflect.Descriptor instead.
func (*ProvinceRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{33}
}

func (x *ProvinceRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ProvinceRp) GetProvince() []*ProvinceType {
	if x != nil {
		return x.Province
	}
	return nil
}

type ProvinceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceID string `protobuf:"bytes,1,opt,name=provinceID,proto3" json:"provinceID,omitempty"`
	Province   string `protobuf:"bytes,2,opt,name=province,proto3" json:"province,omitempty"`
}

func (x *ProvinceType) Reset() {
	*x = ProvinceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvinceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvinceType) ProtoMessage() {}

func (x *ProvinceType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvinceType.ProtoReflect.Descriptor instead.
func (*ProvinceType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{34}
}

func (x *ProvinceType) GetProvinceID() string {
	if x != nil {
		return x.ProvinceID
	}
	return ""
}

func (x *ProvinceType) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

type CityRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ProvinceID       string `protobuf:"bytes,4,opt,name=provinceID,proto3" json:"provinceID,omitempty"`
}

func (x *CityRq) Reset() {
	*x = CityRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityRq) ProtoMessage() {}

func (x *CityRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityRq.ProtoReflect.Descriptor instead.
func (*CityRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{35}
}

func (x *CityRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *CityRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *CityRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *CityRq) GetProvinceID() string {
	if x != nil {
		return x.ProvinceID
	}
	return ""
}

type CityRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode string      `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	City         []*CityType `protobuf:"bytes,2,rep,name=city,proto3" json:"city,omitempty"`
}

func (x *CityRp) Reset() {
	*x = CityRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityRp) ProtoMessage() {}

func (x *CityRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityRp.ProtoReflect.Descriptor instead.
func (*CityRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{36}
}

func (x *CityRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *CityRp) GetCity() []*CityType {
	if x != nil {
		return x.City
	}
	return nil
}

type CityType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityID string `protobuf:"bytes,1,opt,name=cityID,proto3" json:"cityID,omitempty"`
	City   string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *CityType) Reset() {
	*x = CityType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityType) ProtoMessage() {}

func (x *CityType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityType.ProtoReflect.Descriptor instead.
func (*CityType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{37}
}

func (x *CityType) GetCityID() string {
	if x != nil {
		return x.CityID
	}
	return ""
}

func (x *CityType) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type DegreeRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode string        `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	Degree       []*DegreeType `protobuf:"bytes,2,rep,name=degree,proto3" json:"degree,omitempty"`
}

func (x *DegreeRp) Reset() {
	*x = DegreeRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DegreeRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DegreeRp) ProtoMessage() {}

func (x *DegreeRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DegreeRp.ProtoReflect.Descriptor instead.
func (*DegreeRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{38}
}

func (x *DegreeRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *DegreeRp) GetDegree() []*DegreeType {
	if x != nil {
		return x.Degree
	}
	return nil
}

type DegreeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DegreeID string `protobuf:"bytes,1,opt,name=degreeID,proto3" json:"degreeID,omitempty"`
	Degree   string `protobuf:"bytes,2,opt,name=degree,proto3" json:"degree,omitempty"`
}

func (x *DegreeType) Reset() {
	*x = DegreeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DegreeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DegreeType) ProtoMessage() {}

func (x *DegreeType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DegreeType.ProtoReflect.Descriptor instead.
func (*DegreeType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{39}
}

func (x *DegreeType) GetDegreeID() string {
	if x != nil {
		return x.DegreeID
	}
	return ""
}

func (x *DegreeType) GetDegree() string {
	if x != nil {
		return x.Degree
	}
	return ""
}

type DegreeRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *DegreeRq) Reset() {
	*x = DegreeRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DegreeRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DegreeRq) ProtoMessage() {}

func (x *DegreeRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DegreeRq.ProtoReflect.Descriptor instead.
func (*DegreeRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{40}
}

func (x *DegreeRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *DegreeRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *DegreeRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type IncomeRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode string        `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	Income       []*IncomeType `protobuf:"bytes,2,rep,name=income,proto3" json:"income,omitempty"`
}

func (x *IncomeRp) Reset() {
	*x = IncomeRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeRp) ProtoMessage() {}

func (x *IncomeRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeRp.ProtoReflect.Descriptor instead.
func (*IncomeRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{41}
}

func (x *IncomeRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *IncomeRp) GetIncome() []*IncomeType {
	if x != nil {
		return x.Income
	}
	return nil
}

type IncomeRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *IncomeRq) Reset() {
	*x = IncomeRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeRq) ProtoMessage() {}

func (x *IncomeRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeRq.ProtoReflect.Descriptor instead.
func (*IncomeRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{42}
}

func (x *IncomeRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *IncomeRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *IncomeRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type IncomeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncomeID string `protobuf:"bytes,1,opt,name=incomeID,proto3" json:"incomeID,omitempty"`
	Income   string `protobuf:"bytes,2,opt,name=income,proto3" json:"income,omitempty"`
}

func (x *IncomeType) Reset() {
	*x = IncomeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeType) ProtoMessage() {}

func (x *IncomeType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeType.ProtoReflect.Descriptor instead.
func (*IncomeType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{43}
}

func (x *IncomeType) GetIncomeID() string {
	if x != nil {
		return x.IncomeID
	}
	return ""
}

func (x *IncomeType) GetIncome() string {
	if x != nil {
		return x.Income
	}
	return ""
}

type IndustrialSectorRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode     string                  `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	IndustrialSector []*IndustrialSectorType `protobuf:"bytes,2,rep,name=industrialSector,proto3" json:"industrialSector,omitempty"`
}

func (x *IndustrialSectorRp) Reset() {
	*x = IndustrialSectorRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustrialSectorRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustrialSectorRp) ProtoMessage() {}

func (x *IndustrialSectorRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustrialSectorRp.ProtoReflect.Descriptor instead.
func (*IndustrialSectorRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{44}
}

func (x *IndustrialSectorRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *IndustrialSectorRp) GetIndustrialSector() []*IndustrialSectorType {
	if x != nil {
		return x.IndustrialSector
	}
	return nil
}

type IndustrialSectorRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *IndustrialSectorRq) Reset() {
	*x = IndustrialSectorRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustrialSectorRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustrialSectorRq) ProtoMessage() {}

func (x *IndustrialSectorRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustrialSectorRq.ProtoReflect.Descriptor instead.
func (*IndustrialSectorRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{45}
}

func (x *IndustrialSectorRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *IndustrialSectorRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *IndustrialSectorRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type IndustrialSectorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndustrialSectorID string `protobuf:"bytes,1,opt,name=industrialSectorID,proto3" json:"industrialSectorID,omitempty"`
	IndustrialSector   string `protobuf:"bytes,2,opt,name=industrialSector,proto3" json:"industrialSector,omitempty"`
}

func (x *IndustrialSectorType) Reset() {
	*x = IndustrialSectorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustrialSectorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustrialSectorType) ProtoMessage() {}

func (x *IndustrialSectorType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustrialSectorType.ProtoReflect.Descriptor instead.
func (*IndustrialSectorType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{46}
}

func (x *IndustrialSectorType) GetIndustrialSectorID() string {
	if x != nil {
		return x.IndustrialSectorID
	}
	return ""
}

func (x *IndustrialSectorType) GetIndustrialSector() string {
	if x != nil {
		return x.IndustrialSector
	}
	return ""
}

type OpeningPurposeRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode   string                `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	OpeningPurpose []*OpeningPurposeType `protobuf:"bytes,2,rep,name=openingPurpose,proto3" json:"openingPurpose,omitempty"`
}

func (x *OpeningPurposeRp) Reset() {
	*x = OpeningPurposeRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningPurposeRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningPurposeRp) ProtoMessage() {}

func (x *OpeningPurposeRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningPurposeRp.ProtoReflect.Descriptor instead.
func (*OpeningPurposeRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{47}
}

func (x *OpeningPurposeRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *OpeningPurposeRp) GetOpeningPurpose() []*OpeningPurposeType {
	if x != nil {
		return x.OpeningPurpose
	}
	return nil
}

type OpeningPurposeRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *OpeningPurposeRq) Reset() {
	*x = OpeningPurposeRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningPurposeRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningPurposeRq) ProtoMessage() {}

func (x *OpeningPurposeRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningPurposeRq.ProtoReflect.Descriptor instead.
func (*OpeningPurposeRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{48}
}

func (x *OpeningPurposeRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *OpeningPurposeRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *OpeningPurposeRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type OpeningPurposeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpeningPurposeID string `protobuf:"bytes,1,opt,name=openingPurposeID,proto3" json:"openingPurposeID,omitempty"`
	OpeningPurpose   string `protobuf:"bytes,2,opt,name=openingPurpose,proto3" json:"openingPurpose,omitempty"`
}

func (x *OpeningPurposeType) Reset() {
	*x = OpeningPurposeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningPurposeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningPurposeType) ProtoMessage() {}

func (x *OpeningPurposeType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningPurposeType.ProtoReflect.Descriptor instead.
func (*OpeningPurposeType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{49}
}

func (x *OpeningPurposeType) GetOpeningPurposeID() string {
	if x != nil {
		return x.OpeningPurposeID
	}
	return ""
}

func (x *OpeningPurposeType) GetOpeningPurpose() string {
	if x != nil {
		return x.OpeningPurpose
	}
	return ""
}

type SourceIncomeRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode string              `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	SourceIncome []*SourceIncomeType `protobuf:"bytes,2,rep,name=sourceIncome,proto3" json:"sourceIncome,omitempty"`
}

func (x *SourceIncomeRp) Reset() {
	*x = SourceIncomeRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceIncomeRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceIncomeRp) ProtoMessage() {}

func (x *SourceIncomeRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceIncomeRp.ProtoReflect.Descriptor instead.
func (*SourceIncomeRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{50}
}

func (x *SourceIncomeRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *SourceIncomeRp) GetSourceIncome() []*SourceIncomeType {
	if x != nil {
		return x.SourceIncome
	}
	return nil
}

type SourceIncomeRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SourceIncomeRq) Reset() {
	*x = SourceIncomeRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceIncomeRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceIncomeRq) ProtoMessage() {}

func (x *SourceIncomeRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceIncomeRq.ProtoReflect.Descriptor instead.
func (*SourceIncomeRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{51}
}

func (x *SourceIncomeRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *SourceIncomeRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *SourceIncomeRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SourceIncomeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceIncomeID string `protobuf:"bytes,1,opt,name=sourceIncomeID,proto3" json:"sourceIncomeID,omitempty"`
	SourceIncome   string `protobuf:"bytes,2,opt,name=sourceIncome,proto3" json:"sourceIncome,omitempty"`
}

func (x *SourceIncomeType) Reset() {
	*x = SourceIncomeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceIncomeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceIncomeType) ProtoMessage() {}

func (x *SourceIncomeType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceIncomeType.ProtoReflect.Descriptor instead.
func (*SourceIncomeType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{52}
}

func (x *SourceIncomeType) GetSourceIncomeID() string {
	if x != nil {
		return x.SourceIncomeID
	}
	return ""
}

func (x *SourceIncomeType) GetSourceIncome() string {
	if x != nil {
		return x.SourceIncome
	}
	return ""
}

type JobTypesRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode string          `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	JobTypes     []*JobTypesType `protobuf:"bytes,2,rep,name=jobTypes,proto3" json:"jobTypes,omitempty"`
}

func (x *JobTypesRp) Reset() {
	*x = JobTypesRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTypesRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTypesRp) ProtoMessage() {}

func (x *JobTypesRp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTypesRp.ProtoReflect.Descriptor instead.
func (*JobTypesRp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{53}
}

func (x *JobTypesRp) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *JobTypesRp) GetJobTypes() []*JobTypesType {
	if x != nil {
		return x.JobTypes
	}
	return nil
}

type JobTypesRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerID        string `protobuf:"bytes,1,opt,name=partnerID,proto3" json:"partnerID,omitempty"`
	RequestTimestamp string `protobuf:"bytes,2,opt,name=requestTimestamp,proto3" json:"requestTimestamp,omitempty"`
	Signature        string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *JobTypesRq) Reset() {
	*x = JobTypesRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTypesRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTypesRq) ProtoMessage() {}

func (x *JobTypesRq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTypesRq.ProtoReflect.Descriptor instead.
func (*JobTypesRq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{54}
}

func (x *JobTypesRq) GetPartnerID() string {
	if x != nil {
		return x.PartnerID
	}
	return ""
}

func (x *JobTypesRq) GetRequestTimestamp() string {
	if x != nil {
		return x.RequestTimestamp
	}
	return ""
}

func (x *JobTypesRq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type JobTypesType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeID string `protobuf:"bytes,1,opt,name=jobTypeID,proto3" json:"jobTypeID,omitempty"`
	JobType   string `protobuf:"bytes,2,opt,name=jobType,proto3" json:"jobType,omitempty"`
}

func (x *JobTypesType) Reset() {
	*x = JobTypesType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTypesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTypesType) ProtoMessage() {}

func (x *JobTypesType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTypesType.ProtoReflect.Descriptor instead.
func (*JobTypesType) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{55}
}

func (x *JobTypesType) GetJobTypeID() string {
	if x != nil {
		return x.JobTypeID
	}
	return ""
}

func (x *JobTypesType) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xfc, 0x02, 0x0a, 0x11,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfe, 0x01, 0x0a, 0x0e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x43, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x43, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x10,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x22, 0xa0, 0x02, 0x0a,
	0x10, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xb1, 0x02, 0x0a, 0x09, 0x54, 0x72, 0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0xaf, 0x01, 0x0a, 0x09, 0x54, 0x72, 0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0xfe, 0x02, 0x0a, 0x0a, 0x54, 0x72, 0x66, 0x4f, 0x66, 0x66,
	0x55, 0x73, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x66, 0x4f, 0x66,
	0x66, 0x55, 0x73, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x87, 0x03, 0x0a, 0x0d, 0x49, 0x6e,
	0x71, 0x54, 0x72, 0x66, 0x4f, 0x66, 0x66, 0x55, 0x73, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x44, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x71, 0x54, 0x72, 0x66, 0x4f, 0x66,
	0x66, 0x55, 0x73, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x44, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x22, 0xae, 0x02,
	0x0a, 0x0c, 0x49, 0x6e, 0x71, 0x54, 0x72, 0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52, 0x70, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9c,
	0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x71, 0x54, 0x72, 0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x44, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x22, 0xaf, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22,
	0x7d, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xb1,
	0x01, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x61, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7d, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7d, 0x0a, 0x09, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x07, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x75, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x22, 0x9e, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xb7, 0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x69, 0x66, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x69, 0x66, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x05,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x22, 0x66, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x53, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x53, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x8a, 0x03, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x69, 0x66, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x69, 0x66, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6b, 0x74, 0x70, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6b, 0x74, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x63, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x06, 0x43, 0x69, 0x74, 0x79, 0x52, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x06, 0x43, 0x69, 0x74, 0x79,
	0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x36, 0x0a,
	0x08, 0x43, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x5b, 0x0a, 0x08, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x52,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x22, 0x40, 0x0a, 0x0a, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x22, 0x72, 0x0a, 0x08, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x52, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x5b, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x40, 0x0a, 0x0a, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x12,
	0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x10, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x22, 0x7c, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x72, 0x0a, 0x14, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x7b, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65,
	0x22, 0x7a, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f,
	0x73, 0x65, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x68, 0x0a, 0x12,
	0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x0e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x0a, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x46, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x32, 0xa3, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0c, 0x49,
	0x6e, 0x71, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x49, 0x6e, 0x71, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x71, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x70, 0x22, 0x00, 0x32, 0x99,
	0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x66,
	0x66, 0x55, 0x73, 0x52, 0x71, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x66, 0x4f, 0x66, 0x66, 0x55, 0x73, 0x52, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x66, 0x4f, 0x66, 0x66, 0x55, 0x73, 0x52, 0x70, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x6e, 0x55,
	0x73, 0x52, 0x71, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72,
	0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x72, 0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x12, 0x49, 0x6e, 0x71, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x55,
	0x73, 0x52, 0x71, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e,
	0x71, 0x54, 0x72, 0x66, 0x4f, 0x66, 0x66, 0x55, 0x73, 0x52, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x54, 0x72, 0x66, 0x4f, 0x66, 0x66, 0x55,
	0x73, 0x52, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x11, 0x49, 0x6e, 0x71, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4f, 0x6e, 0x55, 0x73, 0x52, 0x71, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x54, 0x72, 0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52,
	0x71, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x71, 0x54,
	0x72, 0x66, 0x4f, 0x6e, 0x55, 0x73, 0x52, 0x70, 0x22, 0x00, 0x32, 0xb1, 0x03, 0x0a, 0x0f, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x4a,
	0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x71, 0x1a, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x52, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x70, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x52, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x05, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x70, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x1c, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x70, 0x22, 0x00, 0x32, 0x7d,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x71, 0x1a, 0x13,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x70, 0x22, 0x00, 0x32, 0xec, 0x03,
	0x0a, 0x0c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x71, 0x1a,
	0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x52, 0x70, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x71, 0x1a,
	0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x70,
	0x22, 0x00, 0x12, 0x30, 0x0a, 0x06, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x11, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x52, 0x71, 0x1a,
	0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x52, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x06, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x11,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52,
	0x71, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x52, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73,
	0x65, 0x52, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x70, 0x22, 0x00,
	0x12, 0x42, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x52, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_service_proto_goTypes = []interface{}{
	(*Message)(nil),                // 0: service.Message
	(*InquiryMutationRq)(nil),      // 1: service.InquiryMutationRq
	(*InquiryMutationRp)(nil),      // 2: service.InquiryMutationRp
	(*DetailMutation)(nil),         // 3: service.DetailMutation
	(*InquiryBalanceRq)(nil),       // 4: service.InquiryBalanceRq
	(*InquiryBalanceRp)(nil),       // 5: service.InquiryBalanceRp
	(*TrfOnUsRq)(nil),              // 6: service.TrfOnUsRq
	(*TrfOnUsRp)(nil),              // 7: service.TrfOnUsRp
	(*TrfOffUsRq)(nil),             // 8: service.TrfOffUsRq
	(*TrfOffUsRp)(nil),             // 9: service.TrfOffUsRp
	(*InqTrfOffUsRp)(nil),          // 10: service.InqTrfOffUsRp
	(*InqTrfOffUsRq)(nil),          // 11: service.InqTrfOffUsRq
	(*InqTrfOnUsRp)(nil),           // 12: service.InqTrfOnUsRp
	(*InqTrfOnUsRq)(nil),           // 13: service.InqTrfOnUsRq
	(*GenPartnerKeyRq)(nil),        // 14: service.GenPartnerKeyRq
	(*GenPartnerKeyRp)(nil),        // 15: service.GenPartnerKeyRp
	(*VerifySessionIdRq)(nil),      // 16: service.VerifySessionIdRq
	(*VerifySessionIdRp)(nil),      // 17: service.VerifySessionIdRp
	(*DecryptRq)(nil),              // 18: service.DecryptRq
	(*DecryptRp)(nil),              // 19: service.DecryptRp
	(*EncryptRq)(nil),              // 20: service.EncryptRq
	(*EncryptRp)(nil),              // 21: service.EncryptRp
	(*LoginRq)(nil),                // 22: service.LoginRq
	(*LoginRp)(nil),                // 23: service.LoginRp
	(*GenPartnerOnboardKeyRq)(nil), // 24: service.GenPartnerOnboardKeyRq
	(*GenPartnerOnboardKeyRp)(nil), // 25: service.GenPartnerOnboardKeyRp
	(*UserInfoRq)(nil),             // 26: service.UserInfoRq
	(*UserInfoRp)(nil),             // 27: service.UserInfoRp
	(*Card)(nil),                   // 28: service.Card
	(*Account)(nil),                // 29: service.Account
	(*UserDataRq)(nil),             // 30: service.UserDataRq
	(*UserDataRp)(nil),             // 31: service.UserDataRp
	(*ProvinceRq)(nil),             // 32: service.ProvinceRq
	(*ProvinceRp)(nil),             // 33: service.ProvinceRp
	(*ProvinceType)(nil),           // 34: service.ProvinceType
	(*CityRq)(nil),                 // 35: service.CityRq
	(*CityRp)(nil),                 // 36: service.CityRp
	(*CityType)(nil),               // 37: service.CityType
	(*DegreeRp)(nil),               // 38: service.DegreeRp
	(*DegreeType)(nil),             // 39: service.DegreeType
	(*DegreeRq)(nil),               // 40: service.DegreeRq
	(*IncomeRp)(nil),               // 41: service.IncomeRp
	(*IncomeRq)(nil),               // 42: service.IncomeRq
	(*IncomeType)(nil),             // 43: service.IncomeType
	(*IndustrialSectorRp)(nil),     // 44: service.IndustrialSectorRp
	(*IndustrialSectorRq)(nil),     // 45: service.IndustrialSectorRq
	(*IndustrialSectorType)(nil),   // 46: service.IndustrialSectorType
	(*OpeningPurposeRp)(nil),       // 47: service.OpeningPurposeRp
	(*OpeningPurposeRq)(nil),       // 48: service.OpeningPurposeRq
	(*OpeningPurposeType)(nil),     // 49: service.OpeningPurposeType
	(*SourceIncomeRp)(nil),         // 50: service.SourceIncomeRp
	(*SourceIncomeRq)(nil),         // 51: service.SourceIncomeRq
	(*SourceIncomeType)(nil),       // 52: service.SourceIncomeType
	(*JobTypesRp)(nil),             // 53: service.JobTypesRp
	(*JobTypesRq)(nil),             // 54: service.JobTypesRq
	(*JobTypesType)(nil),           // 55: service.JobTypesType
}
var file_service_proto_depIdxs = []int32{
	3,  // 0: service.InquiryMutationRp.data:type_name -> service.DetailMutation
	28, // 1: service.UserInfoRp.cards:type_name -> service.Card
	29, // 2: service.Card.accounts:type_name -> service.Account
	34, // 3: service.ProvinceRp.province:type_name -> service.ProvinceType
	37, // 4: service.CityRp.city:type_name -> service.CityType
	39, // 5: service.DegreeRp.degree:type_name -> service.DegreeType
	43, // 6: service.IncomeRp.income:type_name -> service.IncomeType
	46, // 7: service.IndustrialSectorRp.industrialSector:type_name -> service.IndustrialSectorType
	49, // 8: service.OpeningPurposeRp.openingPurpose:type_name -> service.OpeningPurposeType
	52, // 9: service.SourceIncomeRp.sourceIncome:type_name -> service.SourceIncomeType
	55, // 10: service.JobTypesRp.jobTypes:type_name -> service.JobTypesType
	4,  // 11: service.AccountHandler.InqbalanceRq:input_type -> service.InquiryBalanceRq
	1,  // 12: service.AccountHandler.InqMutationRq:input_type -> service.InquiryMutationRq
	8,  // 13: service.TransferHandler.TransferOffUsRq:input_type -> service.TrfOffUsRq
	6,  // 14: service.TransferHandler.TransferOnUsRq:input_type -> service.TrfOnUsRq
	11, // 15: service.TransferHandler.InqTransferOffUsRq:input_type -> service.InqTrfOffUsRq
	13, // 16: service.TransferHandler.InqTransferOnUsRq:input_type -> service.InqTrfOnUsRq
	14, // 17: service.SecurityHandler.GeneratePartnerKey:input_type -> service.GenPartnerKeyRq
	16, // 18: service.SecurityHandler.VerifySessionId:input_type -> service.VerifySessionIdRq
	18, // 19: service.SecurityHandler.DecryptValue:input_type -> service.DecryptRq
	20, // 20: service.SecurityHandler.EncryptValue:input_type -> service.EncryptRq
	22, // 21: service.SecurityHandler.Login:input_type -> service.LoginRq
	24, // 22: service.SecurityHandler.GeneratePartnerOnboardingKey:input_type -> service.GenPartnerOnboardKeyRq
	26, // 23: service.UserHandler.UserInfo:input_type -> service.UserInfoRq
	30, // 24: service.UserHandler.UserData:input_type -> service.UserDataRq
	32, // 25: service.ParamHandler.Province:input_type -> service.ProvinceRq
	35, // 26: service.ParamHandler.City:input_type -> service.CityRq
	40, // 27: service.ParamHandler.Degree:input_type -> service.DegreeRq
	42, // 28: service.ParamHandler.Income:input_type -> service.IncomeRq
	45, // 29: service.ParamHandler.IndustrialSector:input_type -> service.IndustrialSectorRq
	48, // 30: service.ParamHandler.OpeningPurpose:input_type -> service.OpeningPurposeRq
	51, // 31: service.ParamHandler.SourceIncome:input_type -> service.SourceIncomeRq
	54, // 32: service.ParamHandler.JobTypes:input_type -> service.JobTypesRq
	5,  // 33: service.AccountHandler.InqbalanceRq:output_type -> service.InquiryBalanceRp
	2,  // 34: service.AccountHandler.InqMutationRq:output_type -> service.InquiryMutationRp
	9,  // 35: service.TransferHandler.TransferOffUsRq:output_type -> service.TrfOffUsRp
	7,  // 36: service.TransferHandler.TransferOnUsRq:output_type -> service.TrfOnUsRp
	10, // 37: service.TransferHandler.InqTransferOffUsRq:output_type -> service.InqTrfOffUsRp
	12, // 38: service.TransferHandler.InqTransferOnUsRq:output_type -> service.InqTrfOnUsRp
	15, // 39: service.SecurityHandler.GeneratePartnerKey:output_type -> service.GenPartnerKeyRp
	17, // 40: service.SecurityHandler.VerifySessionId:output_type -> service.VerifySessionIdRp
	19, // 41: service.SecurityHandler.DecryptValue:output_type -> service.DecryptRp
	21, // 42: service.SecurityHandler.EncryptValue:output_type -> service.EncryptRp
	23, // 43: service.SecurityHandler.Login:output_type -> service.LoginRp
	25, // 44: service.SecurityHandler.GeneratePartnerOnboardingKey:output_type -> service.GenPartnerOnboardKeyRp
	27, // 45: service.UserHandler.UserInfo:output_type -> service.UserInfoRp
	31, // 46: service.UserHandler.UserData:output_type -> service.UserDataRp
	33, // 47: service.ParamHandler.Province:output_type -> service.ProvinceRp
	36, // 48: service.ParamHandler.City:output_type -> service.CityRp
	38, // 49: service.ParamHandler.Degree:output_type -> service.DegreeRp
	41, // 50: service.ParamHandler.Income:output_type -> service.IncomeRp
	44, // 51: service.ParamHandler.IndustrialSector:output_type -> service.IndustrialSectorRp
	47, // 52: service.ParamHandler.OpeningPurpose:output_type -> service.OpeningPurposeRp
	50, // 53: service.ParamHandler.SourceIncome:output_type -> service.SourceIncomeRp
	53, // 54: service.ParamHandler.JobTypes:output_type -> service.JobTypesRp
	33, // [33:55] is the sub-list for method output_type
	11, // [11:33] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryMutationRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryMutationRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailMutation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryBalanceRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryBalanceRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrfOnUsRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrfOnUsRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrfOffUsRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrfOffUsRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InqTrfOffUsRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InqTrfOffUsRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InqTrfOnUsRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InqTrfOnUsRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenPartnerKeyRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenPartnerKeyRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySessionIdRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySessionIdRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenPartnerOnboardKeyRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenPartnerOnboardKeyRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvinceRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvinceRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvinceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DegreeRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DegreeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DegreeRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustrialSectorRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustrialSectorRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustrialSectorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningPurposeRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningPurposeRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningPurposeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceIncomeRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceIncomeRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceIncomeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTypesRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTypesRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTypesType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
